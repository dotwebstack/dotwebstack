@prefix elmo: <http://dotwebstack.org/def/elmo#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix http: <http://www.w3.org/2011/http#>.

@prefix config: <http://dotwebstack.org/configuration/>.

#Frontend
GRAPH config:MainStage {

  # We state that any URI containg /id/ should be considered as a non-information resource. 303 redirection is required.
  # Redirect URL's that contain /id/ to URL's that have this replaced by /doc/
  # Double escaping of \\ is needed, because turtle uses a backslash as escape character as well.
  config:NonInformationResourceRedirection a elmo:Redirection;
    elmo:urlPattern "^(.+)\\/id\\/(.+)$";
    elmo:redirectTemplate "$1\\/doc\\/$2";
  .

  # A RequestMapper that maps the original URL to the config:Subject parameter
  config:SubjectFromUrl a elmo:RequestMapper;
    elmo:requestElement http:requestURI;
    elmo:pattern "^(.+)\\/doc\\/(.+)$";
    elmo:template "$1\\/id\\/$2";
    elmo:targetParameter config:Subject;
  .

  # A default representation to be used for any dereferenceable URI's. Two separate representations are needed
  # (A) The representation that matches a /resource path, and uses the ?subject=... query to map to the config:Subject parameter
  config:ResourceRepresentation a elmo:Representation;
    elmo:urlPattern "\\/resource$";
    elmo:requestMapper config:SubjectFromQuery;
    elmo:informationProduct config:ResourceInformationProduct
  .
  # (B) The representation that matches a /doc/ path, and uses the original URL to map to the config:Subject parameter
  config:ResourceRepresentation a elmo:Representation;
    elmo:urlPattern "$1\\/doc\\/$2";
    elmo:requestMapper config:SubjectFromUrl;
    elmo:informationProduct config:ResourceInformationProduct
  .

}

#Backend
GRAPH config:MainStage {

  config:Subject a elmo:TermFilter;
    elmo:name "subject";
    elmo:shape [
      sh:nodeKind sh:IRI;
    ]
  .
  
  config:ResourceInformationProduct a elmo:InformationProduct;
    elmo:requiredParameter config:Subject;
    elmo:query '''
      CONSTRUCT {
        {$subject} ?p ?o
      }
      WHERE {
        {$subject} ?p ?o
      }
    ''';
  .
  
}